# This viminfo file was generated by Vim 7.4.
# You may edit it if you're careful!

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~h
# Last Search Pattern:
~MSle0~/usr

# Command Line History (newest to oldest):
:wq
:q
:.!
:w
:!q
:exit

# Search String History (newest to oldest):
?/usr/bin/python
? \<usr\>
? \<pass\>

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Input Line History (newest to oldest):

# Registers:
""1	LINE	0
	mininet.topo import Topo
	from mininet.net import Mininet
	from mininet.cli import CLI
	from mininet.node import CPULimitedHost
	from mininet.link import TCLink
	from mininet.util import irange,dumpNodeConnections
	from mininet.log import setLogLevel
	from mininet.node import RemoteController
	
	import argparse
	import sys
	import time
	import math
	
	class ClosTopo(Topo):
	
	    def __init__(self, fanout, cores, **opts):
	        # Initialize topology and default options
	        Topo.__init__(self, **opts)
	       
	        "Set up Core and Aggregate level, Connection Core - Aggregation level"
	        Aggregations = []
	        Cores = []
	        for i in range(3,7):
	            Aggregations.append(self.addSwitch('a' + str(i)))
	        for i in range(1,3):
	            Cores.append(self.addSwitch('c' + str(i)))
	        #---------------------------------------------------------
	        for i in range(0,4):
	            for j in range(0,2):            
	                self.addLink(Aggregations[i],Cores[j])
	
	        "Set up Edge level, Connection Aggregation - Edge level "
	        Edges = []  
	        for i in range(7,15):
	            Edges.append(self.addSwitch('e' + str(i)))
	        #---------------------------------------------------------
	        for i in range(0,8):
	            for j in range(0,4):
	                self.addLink(Edges[i],Aggregations[j])
	            
	        "Set up Host level, Connection Edge - Host level "
	        Hosts = []            
	        for i in range(1,17):
	            Hosts.append(self.addHost('h' + str(i)))
	        #---------------------------------------------------------
	        for i in range(0,8):
	            self.addLink( Hosts[ i * 2 ] , Edges[ i ] )
	            self.addLink( Hosts[ i * 2 + 1 ] , Edges[ i ] )            
	            
"2	LINE	0
	
"3	LINE	0
	
	import argparse import sys import time import math
	
	class ClosTopo(Topo):
	
	    def __init__(self, fanout, cores, **opts):
		# Initialize topology and default options
		Topo.__init__(self, **opts)
	       
		"Set up Core and Aggregate level, Connection Core - Aggregation level"
	Aggregations = [] Cores = [] for i in range(1,5):
	Aggregations.append(self.addSwitch('a' + str(i))) for i in range(1,3):
	Cores.append(self.addSwitch('c' + str(i)))
	#--------------------------------------------------------- for i in range(0,4):
	for j in range(0,2):            self.addLink(Aggregations[i],Cores[j])
	
		"Set up Edge level, Connection Aggregation - Edge level " Edges = []
	for i in range(1,9): Edges.append(self.addSwitch('e' + str(i)))
	#--------------------------------------------------------- for i in range(0,8):
	for j in range(0,4): self.addLink(Edges[i],Aggregations[j])
	            
		"Set up Host level, Connection Edge - Host level " Hosts = []
	for i in range(1,17): Hosts.append(self.addHost('h' + str(i)))
	#--------------------------------------------------------- for i in range(0,8):
	self.addLink( Hosts[ i * 2 ] , Edges[ i ] ) self.addLink( Hosts[ i * 2 + 1 ] ,
	Edges[ i ] )            
	            
	def setup_clos_topo(fanout=2, cores=1): "Create and test a simple clos network"
	assert(fanout>0) assert(cores>0) topo = ClosTopo(fanout, cores) net =
	Mininet(topo=topo, controller=lambda name: RemoteController('c0', "127.0.0.1"),
	autoSetMacs=True, link=TCLink) net.start() time.sleep(20) #wait 20 sec for
	routing to converge net.pingAll()  #test all to all ping and learn the ARP info
	over this process CLI(net)       #invoke the mininet CLI to test your own
	commands net.stop()     #stop the emulation (in practice Ctrl-C from the CLI
	#and then sudo mn -c will be performed by programmer)
	
	    
	def main(argv): parser = argparse.ArgumentParser(description="Parse input
	information for mininet Clos network")
	parser.add_argument('--num_of_core_switches', '-c', dest='cores', type=int,
	help='number of core switches') parser.add_argument('--fanout', '-f',
	dest='fanout', type=int, help='network fanout') args = parser.parse_args(argv)
	setLogLevel('info') setup_clos_topo(args.fanout, args.cores)
	
	
	if __name__ == '__main__': main(sys.argv[1:])
	
"4	LINE	0
	from mininet.cli import CLI from mininet.node import CPULimitedHost from
	mininet.link import TCLink from mininet.util import irange,dumpNodeConnections
	from mininet.log import setLogLevel from mininet.node import RemoteController
"5	LINE	0
	#!/usr/bin/python
	 from mininet.topo import Topo from mininet.net import Mininet
"6	LINE	0
	
	from mininet.topo import Topo
	from mininet.net import Mininet
	from mininet.cli import CLI
	from mininet.node import CPULimitedHost
	from mininet.link import TCLink
	from mininet.util import irange,dumpNodeConnections
	from mininet.log import setLogLevel
	from mininet.node import RemoteController
	
	import argparse
	import sys
	import time
	import math
	
	class ClosTopo(Topo):
	
	    def __init__(self, fanout, cores, **opts):
	        # Initialize topology and default options
	        Topo.__init__(self, **opts)
	       
	        "Set up Core and Aggregate level, Connection Core - Aggregation level"
	        #WRITE YOUR CODE HERE!
	        #pass
	
	        "Set up Edge level, Connection Aggregation - Edge level "
	        #WRITE YOUR CODE HERE!
	        #pass
	        
	        "Set up Host level, Connection Edge - Host level "
	        #WRITE YOUR CODE HERE!
	        #pass
	        Hosts = []
	        Edges = []
	        Aggregations = []
	        Cores = []
	        for i in range(1,17):
	            Hosts.append(self.addHost('h' + str(i)))
	        for i in range(7,15):
	            Edges.append(self.addSwitch('e' + str(i)))
	        for i in range(3,7):
	            Aggregations.append(self.addSwitch('a' + str(i)))
	        for i in range(1,3):
	            Cores.append(self.addSwitch('c' + str(i)))
	        for i in range(0,8):
	            self.addLink( Hosts[ i * 2 ] , Edges[ i ] )
	            self.addLink( Hosts[ i * 2 + 1 ] , Edges[ i ] )
	        for i in range(0,8):
	            for j in range(0,4):
	                self.addLink(Edges[i],Aggregations[j])
"-	CHAR	0
	[

# File marks:
'0  2  4  ~/pox/clos_topo.py
'1  1  0  ~/pox/clos_topo.py
'2  1  0  ~/pox/clos_topo.py
'3  1  16  ~/pox/clos_topo.py
'4  1  0  ~/pox/clos_topo.py
'5  1  0  ~/pox/clos_topo.py
'6  1  17  ~/pox/clos_topo.py
'7  1  53  ~/pox/clos_topo.py
'8  1  0  ~/pox/clos_topo.py
'9  1  27  ~/pox/clos_topo.py

# Jumplist (newest first):
-'  2  4  ~/pox/clos_topo.py
-'  1  0  ~/pox/clos_topo.py
-'  9  20  ~/pox/pox/CloudNetController.py
-'  1  0  ~/pox/pox/CloudNetController.py
-'  1  20  ~/pox/pox/migration_events.py
-'  1  0  ~/pox/pox/firewall_policies.csv
-'  3  0  ~/pox/pox/firewall_policies.csv
-'  658  37  ~/pox/pox/CloudNNetController.py
-'  1  0  ~/pox/pox/CloudNNetController.py
-'  730  121  ~/pox/clos_topo.py
-'  1  0  ~/pox/clos_top.py
-'  731  0  ~/pox/clos_topo.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  658  37  ~/pox/pox/CloudNNetController.py
-'  1  0  ~/pox/pox/CloudNNetController.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  658  37  ~/pox/pox/CloudNNetController.py
-'  1  0  ~/pox/pox/CloudNNetController.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  658  37  ~/pox/pox/CloudNNetController.py
-'  1  0  ~/pox/pox/CloudNNetController.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  9  20  ~/pox/pox/CloudNetController.py
-'  1  0  ~/pox/pox/CloudNetController.py
-'  1  20  ~/pox/pox/migration_events.py
-'  1  0  ~/pox/pox/firewall_policies.csv
-'  3  0  ~/pox/pox/firewall_policies.csv
-'  658  37  ~/pox/pox/CloudNNetController.py
-'  1  0  ~/pox/pox/CloudNNetController.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  1  0  ~/pox/clos_top.py
-'  9  20  ~/pox/pox/CloudNetController.py
-'  1  0  ~/pox/pox/CloudNetController.py
-'  1  20  ~/pox/pox/migration_events.py
-'  1  0  ~/pox/pox/firewall_policies.csv
-'  3  0  ~/pox/pox/firewall_policies.csv
-'  658  37  ~/pox/pox/CloudNNetController.py
-'  1  0  ~/pox/pox/CloudNNetController.py
-'  1  0  ~/pox/clos_top.py

# History of marks within files (newest to oldest):

> ~/pox/clos_topo.py
	"	2	4
	^	2	5
	.	2	4
	+	1	16
	+	1	14
	+	731	0
	+	731	0
	+	1	0
	+	1	16
	+	730	122
	+	1	22
	+	1	251
	+	1	318
	+	1	501
	+	1	433
	+	1	370
	+	1	434
	+	1	433
	+	1	537
	+	1	0
	+	1	685
	+	1	433
	+	1	188
	+	1	669
	+	1	8
	+	1	9
	+	1	279
	+	1	346
	+	1	816
	+	1	20
	+	1	331
	+	1	821
	+	1	25
	+	1	419
	+	1	444
	+	1	479
	+	1	286
	+	1	0
	+	1	22
	+	1	0
	+	1	7
	+	1	26
	+	1	25
	+	1	54
	+	1	0
	+	1	0
	+	1	0
	+	1	0
	+	1	45
	+	1	17
	+	1	22
	+	1	17
	+	1	0
	+	1	0
	+	1	22
	+	1	0
	+	76	22
	+	2	0
	+	1	0
	+	2	4

> ~/pox/pox/CloudNetController.py
	"	9	20
	^	9	21
	.	10	0
	+	9	21
	+	10	0

> ~/pox/pox/migration_events.py
	"	1	20
	^	1	21
	.	1	19
	+	1	19

> ~/pox/pox/firewall_policies.csv
	"	1	0
	^	3	0
	.	2	77
	+	2	77

> ~/pox/pox/CloudNNetController.py
	"	658	37
	^	658	38
	.	658	1
	+	658	1

> ~/pox/clos_top.py
	"	1	0
